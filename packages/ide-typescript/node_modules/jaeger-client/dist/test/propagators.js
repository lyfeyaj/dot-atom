'use strict';

var _chai = require('chai');

var _text_map_codec = require('../src/propagators/text_map_codec');

var _text_map_codec2 = _interopRequireDefault(_text_map_codec);

var _span_context = require('../src/span_context');

var _span_context2 = _interopRequireDefault(_span_context);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('TextMapCodec', function () {
    it('should not URL-decode value that has no % meta-characters', function () {
        var codec = new _text_map_codec2.default({ urlEncoding: true });
        codec._decodeURIValue = function (value) {
            throw new URIError('fake error');
        };
        _chai.assert.strictEqual(codec._decodeValue('abc'), 'abc');
    });

    it('should not throw exception on bad URL-encoded values', function () {
        var codec = new _text_map_codec2.default({ urlEncoding: true });
        // this string throws exception when passed to decodeURIComponent
        _chai.assert.strictEqual(codec._decodeValue('%EA'), '%EA');
    });

    it('should not URL-encode span context', function () {
        var codec = new _text_map_codec2.default({ urlEncoding: true, contextKey: 'trace-context' });
        var ctx = _span_context2.default.fromString('1:1:1:1');
        var out = {};
        codec.inject(ctx, out);
        _chai.assert.strictEqual(out['trace-context'], '1:1:1:1');
    });

    it('should decode baggage', function () {
        var codec = new _text_map_codec2.default({
            urlEncoding: true,
            contextKey: 'trace-context',
            baggagePrefix: 'baggage-'
        });
        var carrier = {
            'trace-context': '1:1:1:1',
            'baggage-some-key': 'some-value',
            'garbage-in': 'garbage-out'
        };
        var ctx = codec.extract(carrier);
        _chai.assert.deepEqual(ctx.baggage, { 'some-key': 'some-value' });
    });
}); // Copyright (c) 2016 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied. See the License for the specific language governing permissions and limitations under
// the License.
//# sourceMappingURL=propagators.js.map